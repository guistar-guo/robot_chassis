2024年天津科技大学-机器人实验室-ros机器人-stm32下位机
作   者：郭耀辉

项目名称：robot_chassis （机器人底盘）

简介：本工程用于学习ros上位机与stm32下位机之间的通信，ros上位机发送运动指令给stm32下位机，stm32下位机根据指令完成运动学正逆解来控制电机，从而使机器人按照上位机的指令运动。

************************robot_chassis1.0***********************
2024/8/8
1.发布初版工程，此工程基于作者上一个项目：fast_win系列的2.5版本，fast_win2.5可以实现四路编码电机的闭环控制，pwm开环控制，sbus协议解析，六路舵机控制等等。robot_chassis1.0在它的基础上，新增与ros上位机的通讯协议，具体的协议见：附件/通讯协议/ros上位机协议.txt.

ros上位机协议一般是不定长的，开头几个字节的某一个字节会规定这个数据帧的长度，最后一位有一个校验位（求和或者异或），有可能有帧尾，也有可能没有。基于本工程目前完成的解析，可以很容易的扩展成其他形式的协议解析

************************robot_chassis2.0***********************
2024/8/10
1.针对uartx.c文件，对工程进一步模块化。

在fast_win更新期间，一直都是负责所有的与串口相关的相关的协议解析，sbus，CODBOT 4WD ROS 机器人通信协议（本项目的ros协议雏形），以及串口日志打印的rtos_printf，非阻塞的dma_printf等等所有与串口相关的代码全部都放在uartx.c中，这种写法不利于阅读，并且可移植性差，多个模块杂糅在一起。

为了改进fast_win项目这个后遗症，在本项目中，将uartx.c拆分为多个模块，具体拆分为：

（1）现uartx.c中，只保留printf重定向（重定义fputc函数），dma_printf函数，rtos_printf函数和串口中断，与以往的串口中断不同，本次更新只保留一个串口中断函数HAL_UART_RxCpltCallback，它是全局的串口中断函数，当有任何串口接收到字节，都会中断进入此函数，此函数将接收到的字节送到对应串口的回调函数中，除此之外，不进行任何逻辑处理，而是将解析串口数据这个工作抛给各个模块对应的串口回调函数，这样做可以极大的提高代码的模块化和可移植性！

（2）将原uartx.c/h中的sbus相关代码独立出来作为一个模块：sbus.c/h，在uartx.c/h中只有sbus模块的回调函数，最大化降低代码之间的耦合性

（3）为了接下来与ros进行通信，对原uartx.c中的CODBOT 4WD ROS 机器人通信协议进行升级，由原来的串口空闲中断解析机制改为现在的单字节接收解析机制，降低了对上位机发送频率的要求，提高了解析串口数据的容错率。并且仍然像sbus.c/h模块那样，将代码独立为robot_communication.c/h模块，负责之后的所有与ros通信的功能

总结，更新后，新增或产生变动了三个模块：

uartx.c/h：现在只负责串口发送函数（printf, dma_printf, rtos_printf）,和为其他模块提供串口回调入口。

sbus.c/h：负责sbus协议解析，提供sbus对象供用户随时访问sbus的各个通道的实时数据.

robot_communication.c/h：负责所有与ros相关的通讯工作


************************robot_chassis2.1***********************
2024/8/10
1.修复2.0版本sbus协议无法通信的bug
2.优化了motor.c，将部分外部不可见函数修饰为static

************************robot_chassis2.2***********************
2024/8/10
1.新增爱思控驱动模块：aqmd.c/h，此模块由于板载资源串口紧缺，而无法使用，但是此模块是作者写过最复杂的协议解析，后续的ros通讯可以参考此模块的诸多思想！

************************robot_chassis2.3***********************
2024/8/10
1.优化了陀螺仪模块，系统上电0.5s内会校验偏差值，后续读取到的数据会减去这个偏差值

************************robot_chassis2.4***********************
2024/8/11
1.基于robot_communication.c/h模块编写轮趣科技的发送和接收协议，协议参考：附录/通信协议/轮趣科技-串口通信控制与反馈.pdf

************************robot_chassis2.5***********************
2024/8/11
1.整理优化了robot_communication.c/h模块的代码（功能不变），添加了一些注释，提高其可读性

************************robot_chassis2.6***********************
2024/8/13
1.接上sbus接收机，测试sbus.c模块的可行性，测试通过！
2.将之前的极其人协议由串口3改为串口4（串口3一般用于调试使用，极其人协议已经调试完毕，因此改为串口4，留出串口3供后续其他的调试工作）

************************robot_chassis2.7***********************
2024/8/13
1.测试了四个电机闭环代码，将此2.7版本对接给队友

************************robot_chassis2.8***********************
2024/8/13
1.完成了麦轮的底盘控制（新增了robot_chassis_control函数）

************************robot_chassis2.9***********************
2024/8/13
1.完成了遥控控制麦轮控制

************************robot_chassis2.9.2***********************
2024/8/14
1.优化了一些注释，提高程序可读性，3.0版本预计会在完成ros端通信之后更新，因此此版本以2.9.2命名








